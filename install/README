GPEC User Agreement
===================

:Date:
    2016.03.18

GPEC development is funded by the US Department of Energy (DoE) through the Princeton Plasma Physics Laboratory (PPPL), and distribution is subject to DoE and PPPL requirements and restrictions.

The scientific results from the use of GPEC are intended for publication and sharing in the open scientific community.

In order to acquire access to the code sources and/or executables, the user must agree to the following:

1. The user will not rename, modify or redistribute the code, in whole or in part, to 3rd parties without consent of the authors, although the code may be imbedded unmodified and shared within a larger software project.

2. If modifications or improvements are needed, these will be developed in collaboration with the authors, so that they may be redistributed through the GPEC git versioning distributions to the benefit of all GPEC users.

3. The users will include the proper code name(s) and appropriate references in published results and presentations. The will must email a draft of any article/report/presentation/etc. using GPEC results to the authors prior to publishing.


Install
========

Public installations should be downloaded and kept up to date from the `releases on Github <https://github.com/PrincetonUniversity/GPEC>`_. The releases remain private for now, so only those with access to the repository will be able to install/update the site package. Contact nlogan@pppl.gov for access.

The global makefile can be found in the install directory. This essentially enters and makes each individual subdirectory. Each subdirectory's makefile references the DEFAULTS.inc file, also in install. A basic compiling is as simple as executing::

  make
  
in the install directory. The executables will then be available in their individual subdirectories as well as collected in the bin directory.

The DEFAULTS.inc sets a number of variables based on conditionals that determine the architecture on which GPEC is being compiled. If you are installing in a new or recently changed environment these can be over-ridden at the individual level. For example, at PPPL this might be done in pentrc using::

  make FC=lfc

The executable then must be manually copied to the package bin directory.