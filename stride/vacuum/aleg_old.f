c-----------------------------------------------------------------------
c     file aleg_old.f.
c     computes Legendre functions, old way.
c-----------------------------------------------------------------------
c-----------------------------------------------------------------------
c     code organization.
c-----------------------------------------------------------------------
c     1. aleg
c-----------------------------------------------------------------------
c     subprogram 1. aleg.
c     computes Legendre functions.
c-----------------------------------------------------------------------
c-----------------------------------------------------------------------
c     declarations.
c-----------------------------------------------------------------------
      SUBROUTINE aleg(x,nloc,pm,pn,pp, aleg0,aleg1)
      IMPLICIT NONE

      REAL(8), INTENT(IN) :: x
      INTEGER, INTENT(IN) :: nloc
      REAL(8), INTENT(OUT) :: pm,pn,pp,aleg0,aleg1

      INTEGER :: kloc
      REAL(8) :: ak02,elipe,elipk,gam,s,v,w,x1,x2,x3,x4,xxq,y,ysq

      REAL(8), PARAMETER :: pi=3.1415926535897931_8,pii=2/pi,
     $     sqpi=1.7724538509055159_8
      REAL(8), PARAMETER :: 
     $     ak0=1.38629436112_8,
     $     ak1=0.09666344259_8,
     $     ak2=0.03590092383_8,
     $     ak3=0.03742563713_8,
     $     ak4=0.01451196212_8,
     $     bk0=0.5_8,
     $     bk1=0.12498593597_8,
     $     bk2=0.06880248576_8,
     $     bk3=0.03328355346_8,
     $     bk4=0.00441787012_8,
     $     ae1=0.44325141463_8,
     $     ae2=0.0626060122_8,
     $     ae3=0.04757383546_8,
     $     ae4=0.01736506451_8,
     $     be1=0.2499836831_8,
     $     be2=0.09200180037_8,
     $     be3=0.04069697526_8,
     $     be4=0.00526449639_8
c-----------------------------------------------------------------------
c     preliminary computations.
c-----------------------------------------------------------------------
      gam=sqpi
      xxq=x*x
      s=(x-1)/(x+1)
      ysq=xxq-1
      y=SQRT(ysq)
      w=x+y
      v=2*y/w
      x1=2/(x+1)
      x2=x1*x1
      x3=x2*x1
      x4=x3*x1
      elipk=ak0+ak1*x1+ak2*x2+ak3*x3+ak4*x4
     $     -(bk0+bk1*x1+bk2*x2+bk3*x3+bk4*x4)*dlog(x1)
      pn=pii*SQRT(2/(x+1))*elipk
      aleg0=pn
      x1=1/w**2
      x2=x1*x1
      x3=x2*x1
      x4=x3*x1
      elipe=1
      IF(ABS(x1)  >  1e-6)
     $     elipe=1+ae1*x1+ae2*x2+ae3*x3+ae4*x4
     $     -(be1*x1+be2*x2+be3*x3+be4*x4)*dlog(x1)
      pp=(pii*SQRT(w)*elipe-x*pn)/(2*y)
      aleg1=pp
c-----------------------------------------------------------------------
c     iterate.
c-----------------------------------------------------------------------
      DO kloc=1,nloc
         ak02=.5_8-kloc
         pm=pn
         pn=pp
         pp=-2*kloc*x*pn/y-ak02*ak02*pm
         gam=gam/ak02
      ENDDO
c-----------------------------------------------------------------------
c     termination.
c-----------------------------------------------------------------------
      RETURN
      END SUBROUTINE aleg
